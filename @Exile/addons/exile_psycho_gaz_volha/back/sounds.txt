soundEngineOnInt[] 		= {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_start", 0.6, 1.0};
		soundEngineOnExt[] 		= {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_start", 0.7, 1.0, 75};
		soundEngineOffInt[] 	= {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_stop", 0.6, 1.0};
		soundEngineOffExt[] 	= {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_stop", 0/7, 1.0, 75};
		class	Sounds
		{
		
		// warp	factor
	#define	FACTOR(val,from,to)	(val factor[from,to])
	// RANGE(val,	begin, band, end,	band)
	#define	RANGE(val,from,band0,to,band1) FACTOR2(val,from,(from+band0),to,(to+band1))
	// FACTOR2(val,	0, 400,	1200,	2000)
	#define	FACTOR2(val,from0,to0,from1,to1) (FACTOR(val,from0,to0)	*	FACTOR(val,to1,from1))

	// redRpm
	#define	MAX_RPM	6900
	// scaled	rpm	to 0 - 1
	#define	RPM(rpm) (rpm/MAX_RPM)

	// specialized FACTOR for rpm
	#define	FACTOR_RPM(from,to)	FACTOR(RPM(rpm),RPM(from),RPM(to))
	// specialized peak	for	rpm
	#define	FACTOR2_RPM(from0,to0,from1,to1) (FACTOR_RPM(from0,to0)	*	FACTOR_RPM(to1,from1))
	// specialized peak, different definition, version for rpm
	#define	RANGE_RPM(from,band0,to,band1) FACTOR2_RPM(from,(from+band0),to,(to+band1))
	

	#define HZ_IDLE FACTOR_RPM(400,1150)
	#define HZ_RPM1 FACTOR_RPM(900,2100)
	#define HZ_RPM2	FACTOR_RPM(1300,3100)
	#define HZ_RPM3 FACTOR_RPM(2200,4100)
	#define HZ_RPM4 FACTOR_RPM(3300,4900)
	#define HZ_RPM5 FACTOR_RPM(4200,6200)
	#define HZ_RPM6 FACTOR_RPM(5100,6900)
	
	#define VOLUME_IDLE FACTOR2_RPM(400,700,900,1100)
	#define VOLUME_RPM1 FACTOR2_RPM(870,1100,1300,2100)
	#define VOLUME_RPM2 FACTOR2_RPM(1250,2050,2300,3100)
	#define VOLUME_RPM3 FACTOR2_RPM(2250,3050,3300,4100)
	#define VOLUME_RPM4 FACTOR2_RPM(3250,4050,4200,4870)
	#define VOLUME_RPM5 FACTOR2_RPM(4150,4800,5150,6150)
	#define VOLUME_RPM6 FACTOR_RPM(5100,6100)
	
		class	Idle_ext
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_Idle", 6.0,	1, 50};
			frequency	=	0.9	+	HZ_IDLE*0.2;
			volume = engineOn*camPos*VOLUME_IDLE;
		};
		class	Engine
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_acceleration",	6.0,1, 75};
			frequency	=	0.8	+	HZ_RPM1*0.2;
			volume = engineOn*camPos*VOLUME_RPM1;
		};
		class	Engine1_ext
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_low",	3.0,1, 90};
			frequency	=	0.8	+	HZ_RPM2*0.2;
			volume = engineOn*camPos*VOLUME_RPM2;
		};
		class	Engine2_ext
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_low",	3.0,1, 100};
			frequency	=	0.8	+	HZ_RPM3*0.2;
			volume = engineOn*camPos*VOLUME_RPM3;
		};
		class	Engine3_ext
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_mid",	4.0,1, 110};
			frequency	=	0.8	+	HZ_RPM4*0.2;
			volume = engineOn*camPos*VOLUME_RPM4;
		};
		class	Engine4_ext
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_high",	3.5,1, 120};
			frequency	=	0.8	+	HZ_RPM5*0.2;
			volume = engineOn*camPos*VOLUME_RPM5;
		};
		class	Engine5_ext
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_high",	3.3,1, 140};
			frequency	=	0.95	+	HZ_RPM6*0.15;
			volume = engineOn*camPos*VOLUME_RPM6;
		};
		class IdleThrust
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_Idle", 2.5,1, 50};
			frequency	=	0.9	+	HZ_IDLE*0.2;
			volume = engineOn*camPos*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_IDLE;
		};
		class EngineThrust
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_acceleration", 2.5,1, 55};
			frequency	=	0.8	+	HZ_RPM1*0.2;
			volume = engineOn*camPos*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM1;
		};
		class Engine1_Thrust_ext
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_low",2.4,1, 60};
			frequency	=	0.8	+	HZ_RPM2*0.2;
			volume = engineOn*camPos*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM2;
		};
		class Engine2_Thrust_ext
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_low", 2.0,1, 70};
			frequency	=	0.8	+	HZ_RPM3*0.2;
			volume = engineOn*camPos*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM3;
		};
		class Engine3_Thrust_ext
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_mid", 2,1, 75};
			frequency	=	0.8	+	HZ_RPM4*0.2;
			volume = engineOn*camPos*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM4;
		};
		class Engine4_Thrust_ext
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_high", 1.2,1, 80};
			frequency	=	0.8	+	HZ_RPM5*0.3;
			volume = engineOn*camPos*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM5;
		};
		class Engine5_Thrust_ext
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_ext_high", 2,1, 90};
			frequency	=	0.9	+	HZ_RPM6*0.2;
			volume = engineOn*camPos*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM6;
		};  
		class	Idle_int
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_Idle", 5.5,	1};
			frequency	=	0.9	+	HZ_IDLE*0.2;
			volume = engineOn*(1-camPos)*VOLUME_IDLE;
		};
		class	Engine_int
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_acceleration",	5.5,1 };
			frequency	=	0.8	+	HZ_RPM1*0.2;
			volume = engineOn*(1-camPos)*VOLUME_RPM1;
		};
		class	Engine1_int
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_low",	4.5,1 };
			frequency	=	0.8	+	HZ_RPM2*0.2;
			volume = engineOn*(1-camPos)*VOLUME_RPM2;
		};
		class	Engine2_int
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_low",	4.1,1 };
			frequency	=	0.8	+	HZ_RPM3*0.2;
			volume = engineOn*(1-camPos)*VOLUME_RPM3;
		};
		class	Engine3_int
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_mid",	4,1 };
			frequency	=	0.8	+	HZ_RPM4*0.2;
			volume = engineOn*(1-camPos)*VOLUME_RPM4;
		};
		class	Engine4_int
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_high",	3.5,1 };
			frequency	=	0.8	+	HZ_RPM5*0.2;
			volume = engineOn*(1-camPos)*VOLUME_RPM5;
		};
		class	Engine5_int
		{
			sound[]	=	{"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_high",	2,1 };
			frequency	=	0.95	+	HZ_RPM6*0.15;
			volume = engineOn*(1-camPos)*VOLUME_RPM6;
		};
		class IdleThrust_int
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_acceleration", 4.0,1 };
			frequency	=	0.9	+	HZ_IDLE*0.2;
			volume = engineOn*(1-camPos)*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_IDLE;
		};
		class EngineThrust_int
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_low", 3.5,1 };
			frequency	=	0.8	+	HZ_RPM1*0.2;
			volume = engineOn*(1-camPos)*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM1;
		};
		class Engine1_Thrust_int
		{
			sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_low", 3,1 };
			frequency	=	0.8	+	HZ_RPM2*0.2;
			volume = engineOn*(1-camPos)*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM2;
		};
		class Engine2_Thrust_int
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_mid", 2.5,1 };
			frequency	=	0.8	+	HZ_RPM3*0.2;
			volume = engineOn*(1-camPos)*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM3;
		};
		class Engine3_Thrust_int
		{
			sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_mid", 2,1 };
			frequency	=	0.8	+	HZ_RPM4*0.2;
			volume = engineOn*(1-camPos)*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM4;
		};
		class Engine4_Thrust_int
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_high", 1.5,1 };
			frequency	=	0.8	+	HZ_RPM5*0.3;
			volume = engineOn*(1-camPos)*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM5;
		};
		class Engine5_Thrust_int
		{
				sound[] = {"Exile_psycho_Gaz_volha\sounds\gaz\gaz_int_high", 1,1 };
			frequency	=	0.9	+	HZ_RPM6*0.2;
			volume = engineOn*(1-camPos)*(0.4+(0.6*FACTOR(thrust,0.1,1)))*VOLUME_RPM6;
		};  
		class	Movement
		{
		sound		= "soundEnviron";
		frequency	= "1";
		volume 		= "0";
		};
 		class TiresRockOut
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\ext_tires_dirt_soft_1", db+3, 1.0, 30};
			frequency = "1";
			volume = "camPos*rock*(speed factor[2, 20])";
		};
		class TiresSandOut
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\ext-tires-sand1", db+3, 1.0, 30};
			frequency = "1";
			volume = "camPos*sand*(speed factor[2, 20])";
		};
		class TiresGrassOut
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\ext_tires_dirt_soft_2", db+3, 1.0, 30};
			frequency = "1";
			volume = "camPos*grass*(speed factor[2, 20])";
		};
		class TiresMudOut
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\ext-tires-mud2", db+3, 1.0, 30};
			frequency = "1";
			volume = "camPos*mud*(speed factor[2, 20])";
		};
		class TiresGravelOut
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\ext_tires_gravel_1", db+3, 1.0, 30};
			frequency = "1";
			volume = "camPos*gravel*(speed factor[2, 20])";
		};
		class TiresAsphaltOut
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\ext_tires_asfalt_2", db+3, 1.0, 30};
			frequency = "1";
			volume = "camPos*asphalt*(speed factor[2, 20])";
		};
		class NoiseOut
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\noises\noise_ext_car_3", db+4, 1.0, 45};
			frequency = "1";
			volume = "camPos*(damper0 max 0.02)*(speed factor[0, 8])";
		};
		
		class TiresRockIn
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\int_tires_dirt_soft_1", db+3, 1.0};
			frequency = "1";
			volume = "(1-camPos)*rock*(speed factor[2, 20])";
		};
		class TiresSandIn
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\int-tires-sand2", db+3, 1.0};
			frequency = "1";
			volume = "(1-camPos)*sand*(speed factor[2, 20])";
		};
		class TiresGrassIn
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\int_tires_dirt_soft_2", db+3, 1.0};
			frequency = "1";
			volume = "(1-camPos)*grass*(speed factor[2, 20])";
		};
		class TiresMudIn
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\int-tires-mud2", db+3, 1.0};
			frequency = "1";
			volume = "(1-camPos)*mud*(speed factor[2, 20])";
		};
		class TiresGravelIn
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\int_tires_gravel_1", db+3, 1.0};
			frequency = "1";
			volume = "(1-camPos)*gravel*(speed factor[2, 20])";
		};
		class TiresAsphaltIn
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\tires\int_tires_asfalt_2", db+3, 1.0};
			frequency = "1";
			volume = "(1-camPos)*asphalt*(speed factor[2, 20])";
		};
		class NoiseIn
		{
			sound[] = {"A3\Sounds_F\vehicles\soft\noises\noise_int_car_3", db+6, 1.0};
			frequency = "1";
			volume = "(damper0 max 0.1)*(speed factor[0, 8])*(1-camPos)"; //definice INSIDE zvuku
		};
		class breaking_ext_road
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_loop_04", db+1, 1, 40};
		frequency	=	1;
		volume = engineOn*camPos*asphalt*(LongSlipDrive Factor[-0.1, -0.4])*(Speed Factor[2, 15]);
			};	
	
		class acceleration_ext_road
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_loop_02", db+1, 1, 40};
		frequency	=	1;
		volume = engineOn*camPos*asphalt*(LongSlipDrive Factor[0.1, 0.4])*(Speed Factor[15, 2]);
			};	
		class turn_left_ext_road
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_loop_02", db+1, 1, 40};
		frequency	=	1;
		volume = engineOn*camPos*asphalt*(latSlipDrive Factor[0.1, 0.4])*(Speed Factor[2, 15]);
			};	

		class turn_right_ext_road
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_loop_02", db+1, 1, 40};
		frequency	=	1;
		volume = engineOn*camPos*asphalt*(latSlipDrive Factor[-0.1, -0.4])*(Speed Factor[2, 15]);
			};	

		class breaking_ext_dirt
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_14_dirt_breaking", db+1, 1, 30};
		frequency	=	1;
		volume = engineOn*camPos*(1-asphalt)*(LongSlipDrive Factor[-0.1, -0.4])*(Speed Factor[1, 15]);
			};	
		class acceleration_ext_dirt
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_16_dirt_acceleration", db+1,	1, 30};
		frequency	=	1;
		volume = engineOn*camPos*(1-asphalt)*(LongSlipDrive Factor[0.1, 0.4])*(Speed Factor[15, 1]);
			};	
		class turn_left_ext_dirt
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_18_dirt", db+1, 1, 30};
		frequency	=	1;
		volume = engineOn*camPos*(1-asphalt)*(latSlipDrive Factor[0.1, 0.4])*(Speed Factor[1, 15]);
			};	

		class turn_right_ext_dirt
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_18_dirt", db+1, 1, 30};
		frequency	=	1;
		volume = engineOn*camPos*(1-asphalt)*(latSlipDrive Factor[-0.1, -0.4])*(Speed Factor[1, 15]);
			};	
	
		class breaking_int_road
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_loop_04_int", db+5, 1};
		frequency	=	1;
		volume = engineOn*asphalt*(1-camPos)*(LongSlipDrive Factor[-0.1, -0.4])*(Speed Factor[2, 15]);
			};	
	
		class acceleration_int_road
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_loop_02_int", db+5, 1};
		frequency	=	1;
		volume = engineOn*asphalt*(1-camPos)*(LongSlipDrive Factor[0.1, 0.4])*(Speed Factor[15, 2]);
			};	
		class turn_left_int_road
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_loop_02_int", db+5, 1};
		frequency	=	1;
		volume = engineOn*asphalt*(1-camPos)*(latSlipDrive Factor[0.1, 0.4])*(Speed Factor[2, 15]);
			};	
		class turn_right_int_road
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_loop_02_int", db+5, 1};
		frequency	=	1;
		volume = engineOn*asphalt*(1-camPos)*(latSlipDrive Factor[-0.1, -0.4])*(Speed Factor[2, 15]);
			};	

		class breaking_int_dirt
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_14_dirt_breaking_int", db+5, 1};
		frequency	=	1;
		volume = engineOn*(1-asphalt)*(1-camPos)*(LongSlipDrive Factor[-01, -0.4])*(Speed Factor[2, 15]);
			};	
		class acceleration_int_dirt
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_16_dirt_acceleration_int", db+5, 1};
		frequency	=	1;
		volume = engineOn*(1-asphalt)*(1-camPos)*(LongSlipDrive Factor[0.1, 0.4])*(Speed Factor[15, 2]);
			};	
		class turn_left_int_dirt
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_18_dirt_int", db+5,	1};
		frequency	=	1;
		volume = engineOn*(1-asphalt)*(1-camPos)*(latSlipDrive Factor[0.1, 0.4])*(Speed Factor[2, 15]);
			};	
		class turn_right_int_dirt
			{
		sound[]	=	{"A3\Sounds_F\vehicles\soft\noises\slipping_tires_18_dirt_int", db+5,	1};
		frequency	=	1;
		volume = engineOn*(1-asphalt)*(1-camPos)*(latSlipDrive Factor[-0.1, -0.4])*(Speed Factor[2, 15]);
			};
		};